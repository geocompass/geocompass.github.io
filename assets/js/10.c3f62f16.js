(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{366:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js代码规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js代码规范"}},[t._v("#")]),t._v(" JS代码规范")]),t._v(" "),a("h2",{attrs:{id:"_1-引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-引言"}},[t._v("#")]),t._v(" 1. 引言")]),t._v(" "),a("blockquote",[a("p",[t._v("本文档参考Google的JavaScript代码风格指南，用来指导应用研发部前端以及Node.js后端人员，JavaScript代码需要遵循此规范")])]),t._v(" "),a("h2",{attrs:{id:"_2-源文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-源文件"}},[t._v("#")]),t._v(" 2. 源文件")]),t._v(" "),a("h3",{attrs:{id:"_2-1-文件名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-文件名"}},[t._v("#")]),t._v(" 2.1 文件名")]),t._v(" "),a("blockquote",[a("p",[t._v("文件名使用小写加破折号(-)命名，示例："),a("code",[t._v("js-code-standard.js")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"_2-2-文件编码-utf-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-文件编码-utf-8"}},[t._v("#")]),t._v(" 2.2 文件编码：UTF-8")]),t._v(" "),a("blockquote",[a("p",[t._v("源文件以UTF-8编码。")])]),t._v(" "),a("h2",{attrs:{id:"_3-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-声明"}},[t._v("#")]),t._v(" 3. 声明")]),t._v(" "),a("blockquote",[a("p",[t._v("JavaScript包含许多可疑(甚至危险)的写法。本节描述了哪些写法可以使用，哪些写法可以不使用，以及使用这些写法的其他限制。")])]),t._v(" "),a("h3",{attrs:{id:"_3-1-局部变量声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-局部变量声明"}},[t._v("#")]),t._v(" 3.1 局部变量声明")]),t._v(" "),a("h4",{attrs:{id:"_3-1-1-使用const和let"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-使用const和let"}},[t._v("#")]),t._v(" 3.1.1 使用"),a("code",[t._v("const")]),t._v("和"),a("code",[t._v("let")])]),t._v(" "),a("blockquote",[a("p",[t._v("用"),a("code",[t._v("const")]),t._v("或"),a("code",[t._v("let")]),t._v("声明所有局部变量。默认情况下使用const，除非需要重新为变量赋值。")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("禁止")]),t._v(" "),a("p",[t._v("不得使用"),a("code",[t._v("var")]),t._v("关键字。")])]),t._v(" "),a("h4",{attrs:{id:"_3-1-2-每次声明一个变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-每次声明一个变量"}},[t._v("#")]),t._v(" 3.1.2 每次声明一个变量")]),t._v(" "),a("blockquote",[a("p",[t._v("每次局部变量声明仅声明一个变量："),a("code",[t._v("let a = 1, b = 2;")]),t._v("不使用类似的声明。")])]),t._v(" "),a("h4",{attrs:{id:"_3-1-3-在需要时进行声明-并尽快初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-在需要时进行声明-并尽快初始化"}},[t._v("#")]),t._v(" 3.1.3 在需要时进行声明，并尽快初始化")]),t._v(" "),a("blockquote",[a("p",[t._v("局部变量不是习惯性的定义在块或类似块结构的开头，而是定义再接近他们第一次使用的地方，以最大程度的减小其作用域范围。")])]),t._v(" "),a("h4",{attrs:{id:"_3-1-4-根据需要声明类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-根据需要声明类型"}},[t._v("#")]),t._v(" 3.1.4 根据需要声明类型")]),t._v(" "),a("blockquote",[a("p",[t._v("JSDoc允许类型注释在变量声明行的上方，如果没有其它JSDoc也可以在行内注释。\n示例：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("！Array "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("一些描述。\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @type "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("！Array "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("不允许使用混合使用行内注释，编译器仅处理第一个JSDoc，并且行内注释将丢失。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v(" **一些描述。* ")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("！Array "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("提示：在许多情况下编译器可以推断模板化类型，但是不能推断参数的类型。尤其是调用不包含任何值的模板参数类型来初始化文字或者构造函数以及在闭包中修改变量时编译器不能推断参数的类型（例如空数组、对象、Map或者Set）。在这些情况下局部变量类型注释特别有用，因为编译器会将模板参数推断为未知。")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-数组字面量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-数组字面量"}},[t._v("#")]),t._v(" 3.2 数组字面量")]),t._v(" "),a("h4",{attrs:{id:"_3-2-1-使用结尾逗号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-使用结尾逗号"}},[t._v("#")]),t._v(" 3.2.1 使用结尾逗号")]),t._v(" "),a("blockquote",[a("p",[t._v("只要最后一个元素和右括号之间换行了，那么就要在末尾加上逗号。\n示例：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" values "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'first value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'second value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-2-2-不要使用可变参数的array构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-不要使用可变参数的array构造函数"}},[t._v("#")]),t._v(" 3.2.2 不要使用可变参数的Array构造函数")]),t._v(" "),a("blockquote",[a("p",[t._v("如果添加或者删除参数这个构造函数很容易出错。用显示声明代替。\n不允许：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("除了第三种情况外其余的可以按照预期工作：如果"),a("code",[t._v("x1")]),t._v("是一个整数，那么"),a("code",[t._v("a3")]),t._v("将是一个长度为"),a("code",[t._v("x1")]),t._v("的数组，并且里面的元素都是"),a("code",[t._v("undefined")]),t._v("。如果"),a("code",[t._v("x1")]),t._v("是一个其它数字，那么将引发异常，并且如果它是其它值那么将是一个单值数组。")])]),t._v(" "),a("blockquote",[a("p",[t._v("作者添加示例：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//长度为2的空数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//错误异常 RangeError: Invalid array length")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['2']")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("正确写法：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x1，x2，x3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x1，x2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在适当的情况下允许使用"),a("code",[t._v("new Array(length)")]),t._v("来给一个数组分配明确的长度。")]),t._v(" "),a("h4",{attrs:{id:"_3-2-3-非数值属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-非数值属性"}},[t._v("#")]),t._v(" 3.2.3 非数值属性")]),t._v(" "),a("blockquote",[a("p",[t._v("不要给数组定义或者使用非数字属性（"),a("code",[t._v("length")]),t._v("除外）。使用"),a("code",[t._v("Map")]),t._v("（或者"),a("code",[t._v("Object")]),t._v("）代替。")])]),t._v(" "),a("h4",{attrs:{id:"_3-2-4-解构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-解构"}},[t._v("#")]),t._v(" 3.2.4 解构")]),t._v(" "),a("blockquote",[a("p",[t._v("数组字面量可以在分配的左边来执行解构（例如从单个Array或者Iterable中解压多个值）。可以在最后包含一个“rest”元素（...与变量名之前没有空格）。如果元素未使用应该省略。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("rest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateResults")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("解构也可以用于函数参数（注意参数名是必需的但是会被忽略）。如果数组解构参数是可选的那么就要使用"),a("code",[t._v("[]")]),t._v("作为默认值，并且在左侧提供默认值。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @param {!Array<number>=} param1 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("optionalDestructuring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" … "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("不允许：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("badDestructuring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" … "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("提示：在可能的情况下，对于打包（解压）多个值作为函数的参数或者函数返回值时应该使用对象解构而不是数组解构，因为对象解构可以提供元素名称以及为每一个元素指定不同的类型。")])]),t._v(" "),a("h4",{attrs:{id:"_3-2-5-展开运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-5-展开运算符"}},[t._v("#")]),t._v(" 3.2.5 展开运算符")]),t._v(" "),a("blockquote",[a("p",[t._v("数组字面量可以使用展开运算符("),a("code",[t._v("...")]),t._v(")来将一个或多个可遍历对象中的元素展开。应该使用展开运算符而不是使用更笨拙的构造函数"),a("code",[t._v("Array.prototype")]),t._v("。"),a("code",[t._v("...")]),t._v("之后没有空格。\n示例：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// preferred over Array.prototype.slice.call(foo)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// preferred over foo.concat(bar)")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-3-对象字面量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-对象字面量"}},[t._v("#")]),t._v(" 3.3 对象字面量")]),t._v(" "),a("h4",{attrs:{id:"_3-3-1-使用结尾逗号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-使用结尾逗号"}},[t._v("#")]),t._v(" 3.3.1 使用结尾逗号")]),t._v(" "),a("blockquote",[a("p",[t._v("最后属性与右括号之间如果有换行需要添加逗号。")])]),t._v(" "),a("h4",{attrs:{id:"_3-3-2-不使用object构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-不使用object构造函数"}},[t._v("#")]),t._v(" 3.3.2 不使用"),a("code",[t._v("Object")]),t._v("构造函数")]),t._v(" "),a("blockquote",[a("p",[t._v("尽管"),a("code",[t._v("Object")]),t._v("没有与"),a("code",[t._v("Array")]),t._v("同样的问题，但是出于一致性的考虑仍然不允许这样做。请使用对象字面量代替（"),a("code",[t._v("{}")]),t._v("或者"),a("code",[t._v("{a: 0, b:1, c:2}")]),t._v("）。")])]),t._v(" "),a("h4",{attrs:{id:"_3-3-3-请勿混合使用带引号与不带引号的键值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-请勿混合使用带引号与不带引号的键值"}},[t._v("#")]),t._v(" 3.3.3 请勿混合使用带引号与不带引号的键值")]),t._v(" "),a("blockquote",[a("p",[t._v("对象字面量可以表示结构（不带引号的键值和/或symbols）或者字典（带有引号的键值和/或计算键值）。在单个对象字面量中不要将这些建混合使用\n不允许：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// struct-style unquoted key")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'maxWidth'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("43")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dict-style quoted key")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("这还将扩展到将属性传递给函数，例如"),a("code",[t._v("hasOwnProperty")]),t._v("。特别是这样做之后会破坏编译后的代码，因为编译器不能重命名/混淆字符串字面量。\n不允许：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @type {{width: number, maxWidth: (number|undefined)}} */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'maxWidth'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("最好的实现方式：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @type {{width: number, maxWidth: (number|undefined)}} */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-3-4-计算属性名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-计算属性名称"}},[t._v("#")]),t._v(" 3.3.4 计算属性名称")]),t._v(" "),a("blockquote",[a("p",[t._v("除非计算属性是"),a("code",[t._v("symbol")]),t._v("（例如"),a("code",[t._v("[Symbol.iterator]")]),t._v("），要不然是允许使用计算属性名称的（例如"),a("code",[t._v("{['key'+foo()]:42}")]),t._v("），并且将其视作字典样式（带引号）的键（即不得与不带引号的键混用）。枚举值也可以当作计算属性键，但是不应该与非枚举键混用。")])]),t._v(" "),a("h4",{attrs:{id:"_3-3-5-方法简写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-5-方法简写"}},[t._v("#")]),t._v(" 3.3.5 方法简写")]),t._v(" "),a("blockquote",[a("p",[t._v("在对象中可以用方法简写代替冒号（"),a("code",[t._v("{method(){...}}")]),t._v("）来定义方法，在后面紧跟一个函数或者箭头函数。\n示例：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  stuff"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'candy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stuff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns 'candy'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("请注意，"),a("code",[t._v("this")]),t._v("在方法或者方法简写中指向对象本身，而"),a("code",[t._v("this")]),t._v("在箭头函数中指向对象之外的范围。\n示例：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObjectLiteral")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stuff "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fruit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      stuff"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'candy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stuff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns 'fruit'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-3-6-简写属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-6-简写属性"}},[t._v("#")]),t._v(" 3.3.6 简写属性")]),t._v(" "),a("blockquote",[a("p",[t._v("在对象中允许简写属性。\n示例：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-3-7-解构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-7-解构"}},[t._v("#")]),t._v(" 3.3.7 解构")]),t._v(" "),a("blockquote",[a("p",[t._v("对象允许在赋值表达式左侧使用对象解构，以此执行解构并且从单对象中提取多个值。\n对象解构也可以用在函数参数上，但是应该尽量的保持简单：单个的不带引号的速记属性。参数解构中不能使用深层的嵌套和计算属性。在解构参数的左侧指定默认值("),a("code",[t._v("{str = 'some default'} = {}")]),t._v(",而不是"),a("code",[t._v("{str} = {str: 'some default'}")]),t._v(")，并且如果解构对象本身是可选的，那么它的默认值必须是"),a("code",[t._v("{}")]),t._v("。JSDoc可以给解构参数指定任意的名字（该名称虽然未使用，但是编译器必须需要）。\n示例：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {string} ordinary\n * @param {{num: (number|undefined), str: (string|undefined)}=} param1\n *     num: The number of times to do something.\n *     str: A string to do stuff to.\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("destructured")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ordinary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some default'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("不允许：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @param {{x: {num: (number|undefined), str: (string|undefined)}}} param1 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nestedTooDeeply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @param {{num: (number|undefined), str: (string|undefined)}=} param1 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nonShorthandProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @param {{a: number, b: number}} param1 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("computedKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @param {{a: number, b: string}=} param1 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nontrivialDefault")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("解构也可以用于"),a("code",[t._v("goog.require")]),t._v("语句，在这种情况下，不得将其包装起来：无论输入语句多长只能占据一行()")])]),t._v(" "),a("h4",{attrs:{id:"_3-3-8-枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-8-枚举"}},[t._v("#")]),t._v(" 3.3.8 枚举")]),t._v(" "),a("blockquote",[a("p",[t._v("枚举是通过将"),a("code",[t._v("@enum")]),t._v("注释添加到对象中来定义的。枚举被定义后不能再添加属性。枚举必须是常量，并且所有枚举值必须是不可变的。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Supported temperature scales.\n * @enum {string}\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TemperatureScale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CELSIUS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'celsius'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FAHRENHEIT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fahrenheit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * An enum with two options.\n * @enum {number}\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Option "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** The option used shall have been the first. */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIRST_OPTION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** The second among two options. */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECOND_OPTION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-4-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-类"}},[t._v("#")]),t._v(" 3.4 类")]),t._v(" "),a("h4",{attrs:{id:"_3-4-1-构造函数-翻译疑问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-构造函数-翻译疑问"}},[t._v("#")]),t._v(" 3.4.1 构造函数（翻译疑问）")]),t._v(" "),a("blockquote",[a("p",[t._v("构造函数是可选的。子类在设置任何字段或者其它的访问"),a("code",[t._v("this")]),t._v("之前必须调用"),a("code",[t._v("super()")]),t._v("。接口在构造函数中应该声明为非函数属性。")])]),t._v(" "),a("h4",{attrs:{id:"_3-4-2-字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-字段"}},[t._v("#")]),t._v(" 3.4.2 字段")]),t._v(" "),a("blockquote",[a("p",[t._v("所有的具体的对象字段在构造函数中设置(即方法以外的所有属性)。用"),a("code",[t._v("@const")]),t._v("注释字段不能重新赋值(这些字段没有必要是深层次固定的)。用适当的可视的注释说明来注释非公共字段("),a("code",[t._v("@private, @protected, @package")]),t._v(")，并且所有的"),a("code",[t._v("@private")]),t._v("字段的名字需要以下划线结尾。字段永远不能设置在具体类的"),a("code",[t._v("prototype")]),t._v("上。\n示例：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @private @const {!Bar} */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar_ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeBar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @protected @const {!Baz} */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeBaz")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("提示：构造函数初始化完成后属性不应该在增加或者删除，因为它会严重影响VM的优化能力。如有必要，在构造函数中稍后初始化的字段应该明确的设置为"),a("code",[t._v("undefined")]),t._v("，防止以后形状改变。添加"),a("code",[t._v("@struct")]),t._v("标识的对象将会检查未添加或者访问没有声明的属性。类在默认情况下已经添加。")])]),t._v(" "),a("h4",{attrs:{id:"_3-4-3-计算属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-3-计算属性"}},[t._v("#")]),t._v(" 3.4.3 计算属性")]),t._v(" "),a("blockquote",[a("p",[t._v("当属性是symbol类型时，只能在类中使用属性。不允许使用字典样式的属性（即带引号或者非符号的计算属性）。")])]),t._v(" "),a("h2",{attrs:{id:"_4-命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-命名"}},[t._v("#")]),t._v(" 4. 命名")]),t._v(" "),a("h3",{attrs:{id:"_4-1-所有标识符通用的规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-所有标识符通用的规则"}},[t._v("#")]),t._v(" 4.1 所有标识符通用的规则")]),t._v(" "),a("blockquote",[a("p",[t._v("标识符仅使用ASCII字母和数字，并且在以下少数情况下使用下划线，并且很少使用（当诸如Angular之类的框架要求时）美元符号。")])]),t._v(" "),a("blockquote",[a("p",[t._v("在合理的范围内，尽可能给出描述性的名称。不必担心节省水平空间，因为让新读者立即理解您的代码更为重要。不要使用项目外部读者不清楚或不熟悉的缩写，也不要通过删除单词中的字母来缩写。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("errorCount           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//无缩写。")]),t._v("\ndnsConnectionIndex   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//大多数人知道“ DNS”代表什么。")]),t._v("\nReferrerUrl          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//与“URL”相同。")]),t._v("\ncustomerId           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//“ Id”无处不在，不太可能被误解。")]),t._v("\n")])])]),a("p",[t._v("不允许：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//毫无意义。")]),t._v("\nnErr                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//模棱两可的缩写。")]),t._v("\nnCompConns           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//模棱两可的缩写。")]),t._v("\nwgcConnections       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只有您的小组知道这代表什么。")]),t._v("\npcReader             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//很多东西都可以缩写为“ pc”。")]),t._v("\ncstmrId              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除内部字母。")]),t._v("\nkSecondsPerDay       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不使用匈牙利表示法。")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-2-按标识符类型划分的规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-按标识符类型划分的规则"}},[t._v("#")]),t._v(" 4.2 按标识符类型划分的规则")]),t._v(" "),a("h4",{attrs:{id:"_4-2-1-包名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-包名"}},[t._v("#")]),t._v(" 4.2.1 包名")]),t._v(" "),a("blockquote",[a("p",[t._v("包名全是"),a("strong",[t._v("lowerCamelCase（小驼峰）")]),t._v("。例如，"),a("code",[t._v("my.exampleCode.deepSpace")]),t._v("但不是"),a("code",[t._v("my.examplecode.deepspace")]),t._v("或"),a("code",[t._v("my.example_code.deep_space")]),t._v("。")])]),t._v(" "),a("h4",{attrs:{id:"_4-2-2-类名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-类名"}},[t._v("#")]),t._v(" 4.2.2 类名")]),t._v(" "),a("blockquote",[a("p",[t._v("类、接口、记录和typedef名称用"),a("strong",[t._v("UpperCamelCase（大驼峰）")]),t._v("。未导出的类仅是局部变量：它们没有标记"),a("code",[t._v("@private")]),t._v("，因此没有用下划线标记。")])]),t._v(" "),a("blockquote",[a("p",[t._v("类型名称通常是名词或名词短语。例如Request、ImmutableList、或VisibilityMode。此外，接口名称有时也可以是形容词或形容词短语（例如Readable）。")])]),t._v(" "),a("h4",{attrs:{id:"_4-2-3-方法名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-方法名"}},[t._v("#")]),t._v(" 4.2.3 方法名")]),t._v(" "),a("blockquote",[a("p",[t._v("方法名采用"),a("strong",[t._v("lowerCamelCase（小驼峰）")]),t._v("。"),a("code",[t._v("@private")]),t._v("方法的名称必须下划线结尾。")])]),t._v(" "),a("blockquote",[a("p",[t._v("方法名称通常是动词或动词短语。例如，sendMessage或 stop_。永远不需要属性的getter和setter方法，但是如果使用它们，那么就要命名为getFoo（或可选地isFoo，hasFoo 对于booleans）或setFoo(value)setter 进行命名。")])]),t._v(" "),a("blockquote",[a("p",[t._v("下划线也可能出现在JsUnit测试方法名称中，以分隔名称的逻辑组成部分。例如， 一种典型的模式是 testPop_emptyStack_throws。没有一种命名测试方法的正确方法。")])]),t._v(" "),a("h4",{attrs:{id:"_4-2-4-枚举名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-4-枚举名称"}},[t._v("#")]),t._v(" 4.2.4 枚举名称")]),t._v(" "),a("blockquote",[a("p",[t._v("枚举名称用编写"),a("strong",[t._v("UpperCamelCase（大驼峰）")]),t._v("，类似于类，通常应为单数名词。枚举中的各个项目以命名 "),a("strong",[t._v("CONSTANT_CASE")]),t._v("（全大写，单词之间用下划线分隔）。")])]),t._v(" "),a("h4",{attrs:{id:"_4-2-5-常量名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-5-常量名称"}},[t._v("#")]),t._v(" 4.2.5 常量名称")]),t._v(" "),a("blockquote",[a("p",[t._v("常量名称使用"),a("strong",[t._v("CONSTANT_CASE")]),t._v("：所有大写字母，单词之间用下划线分隔。没有必要使用结尾的下划线来命名常量，因为私有静态属性可以由（隐式私有）模块本地代替。")])]),t._v(" "),a("h5",{attrs:{id:"_4-2-3-1-常量-的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-1-常量-的定义"}},[t._v("#")]),t._v(" 4.2.3.1 “常量”的定义")]),t._v(" "),a("blockquote",[a("p",[t._v("每个常量都是@const静态属性或模块本地const 声明，但并非所有@const静态属性和module-local、const都是常量。在选择常量大小写之前，请考虑该字段是否真的像一个深不可更改的常量。例如，如果该实例的可观察状态中的任何一个可以更改，则几乎可以肯定它不是常量。仅企图从不改变对象通常是不够的。")])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Constants")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NUMBER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @const */")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAMES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ImmutableList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Ed'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Ann'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @enum */")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SomeEnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENUM_CONSTANT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Not constants")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" letVariable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'non-const'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @const {string} */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nonStatic "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'non-static'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @type {string} */")]),t._v(" MyClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staticButMutable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'not @const, can be reassigned'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Set<string> */")]),t._v(" mutableCollection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** ImmutableSet<SomeMutableType> */")]),t._v(" mutableElements "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ImmutableSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mutable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" goog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my.Foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mirrors imported name")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" logger "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLogger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'loggers.are.not.immutable'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("常量的名称通常是名词或名词短语。")])]),t._v(" "),a("h5",{attrs:{id:"_4-2-3-2本地别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-2本地别名"}},[t._v("#")]),t._v(" 4.2.3.2本地别名")]),t._v(" "),a("p",[t._v("只要本地别名提高了标准名称的可读性，就应使用本地别名。遵循与goog.requires 相同的规则（3.6 goog.require和goog.requireType语句），并保留别名的最后一部分。别名也可以在功能内使用。别名必须为const。")]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" staticHelper "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" importedNamespace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staticHelper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSTANT_NAME")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ImportedClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSTANT_NAME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("assert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" assertInstanceof"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" asserts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_4-2-6-非常量字段名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-6-非常量字段名称"}},[t._v("#")]),t._v(" 4.2.6 非常量字段名称")]),t._v(" "),a("blockquote",[a("p",[t._v("非常量字段名称（静态或其他）用lowerCamelCase（小驼峰），私有字段后跟下划线。")])]),t._v(" "),a("blockquote",[a("p",[t._v("这些名称通常是名词或名词短语。例如，computedValues 或index_。")])]),t._v(" "),a("h4",{attrs:{id:"_4-2-7-参数名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-7-参数名称"}},[t._v("#")]),t._v(" 4.2.7 参数名称")]),t._v(" "),a("blockquote",[a("p",[t._v("参数名称用编写lowerCamelCase（小驼峰）。请注意，即使参数需要构造函数，这也适用。")])]),t._v(" "),a("blockquote",[a("p",[t._v("单字符参数名称不应在公共方法中使用。")])]),t._v(" "),a("blockquote",[a("p",[t._v("例外：当第三方框架要求时，参数名称可以以开头$。此例外不适用于任何其他标识符（例如，局部变量或属性）。")])]),t._v(" "),a("h4",{attrs:{id:"_4-2-8-局部变量名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-8-局部变量名称"}},[t._v("#")]),t._v(" 4.2.8 局部变量名称")]),t._v(" "),a("blockquote",[a("p",[t._v("lowerCamelCase如上所述，局部变量名称用编写，除了模块局部（顶级）常量外。函数范围中的常量仍在中命名lowerCamelCase。请注意，lowerCamelCase即使变量包含构造函数，也要使用它。")])]),t._v(" "),a("h4",{attrs:{id:"_4-2-9-模板参数名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-9-模板参数名称"}},[t._v("#")]),t._v(" 4.2.9 模板参数名称")]),t._v(" "),a("blockquote",[a("p",[t._v("模板参数名称应为简明，单个单词或单个字母的标识符，并且必须为大写字母，例如TYPE或THIS。")])]),t._v(" "),a("h4",{attrs:{id:"_4-2-10-本地模块-module-local-名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-10-本地模块-module-local-名称"}},[t._v("#")]),t._v(" 4.2.10 本地模块（Module-local）名称")]),t._v(" "),a("blockquote",[a("p",[t._v("未导出的模块本地名称是隐式私有的。它们没有标记@private，也不以下划线结尾。这适用于类，函数，变量，常量，枚举和其他模块本地标识符。")])]),t._v(" "),a("h3",{attrs:{id:"_4-3-驼峰式-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-驼峰式-定义"}},[t._v("#")]),t._v(" 4.3 驼峰式：定义")]),t._v(" "),a("blockquote",[a("p",[t._v("有时，有多种合理的方法可以将英语短语转换为驼峰式大小写，例如，当出现首字母缩写词或类似IPv6或 iOS的异常结构时。为了提高可预测性，Google样式指定了以下（几乎）确定性方案。")])]),t._v(" "),a("blockquote",[a("p",[t._v("从名字的散列形式开始：")]),t._v(" "),a("ol",[a("li",[t._v("将短语转换为纯ASCII并删除所有撇号。例如，“Müller's algorithm”可能会变成“Muellers algorithm”。")]),t._v(" "),a("li",[t._v("将结果划分为单词，在空格和所有剩余的标点符号（通常为连字符）之间进行分割。\n推荐：如果某个字词在常规用法中已经具有常规的驼峰式外观，则将其分成几个组成部分（例如， “AdWords”变成“ad words”）。请注意，诸如iOS之类的词本身并不是驼峰式的。它违反任何约定，因此该建议不适用。")]),t._v(" "),a("li",[t._v("现在将所有内容（包括首字母缩写词）都小写，然后将按照下方规则进行改写大写：")])]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("每个单词首字母大写，以产生大驼峰式命名，或者")]),t._v(" "),a("li",[t._v("除第一个单词外的每个单词首字母大写，以产生小驼峰式命名")])])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("最后，将所有单词合并为一个标识符。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("请注意，几乎完全忽略了原始单词的大小写。")])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("散列形式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("正确")]),t._v(" "),a("th",[t._v("不正确的")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("XML HTTP request")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("XmlHttpRequest")]),t._v(" "),a("td",[t._v("XMLHTTPRequest")])]),t._v(" "),a("tr",[a("td",[t._v("new customer ID")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("newCustomerId")]),t._v(" "),a("td",[t._v("newCustomerID")])]),t._v(" "),a("tr",[a("td",[t._v("inner stopwatch")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("innerStopwatch")]),t._v(" "),a("td",[t._v("innerStopWatch")])]),t._v(" "),a("tr",[a("td",[t._v("supports IPv6 on iOS?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("supportsIpv6OnIos")]),t._v(" "),a("td",[t._v("supportsIPv6OnIOS")])]),t._v(" "),a("tr",[a("td",[t._v("YouTube importer")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("YouTubeImporter")]),t._v(" "),a("td",[t._v("YoutubeImporter*")])])])]),t._v(" "),a("p",[t._v("*可以接受，但不推荐。")]),t._v(" "),a("p",[t._v("注意：在英语中某些单词是模棱两可的：例如nonempty和non-empty都是正确的，因此方法名checkNonempty和checkNonEmpty同样都是正确的。")])])}),[],!1,null,null,null);s.default=e.exports}}]);